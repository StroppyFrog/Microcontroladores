CCS PCM C Compiler, Version 5.112, 29001               20-feb.-23 10:19

               Filename:   C:\Users\Ernesto VC\Documents\Programas en c\SemaforoF\SemaforoF.lst

               ROM used:   149 words (2%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           9 (2%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   077
0003:  NOP
.................... #include <16f877a.h>
.................... //////////// Standard Header file for the PIC16F877A device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F877A
.................... 
.................... #list
.................... 
.................... #fuses XT, NOWDT
.................... #use delay(clock = 4000000)
0004:  MOVLW  23
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
.................... #use standard_io(B)
.................... #use standard_io(C)
.................... 
.................... // LIGHTS
.................... void green()
.................... { //LUZ VERDE
....................      for(int i=0; i<=100; i++)
0019:  CLRF   21
001A:  MOVF   21,W
001B:  SUBLW  64
001C:  BTFSS  03.0
001D:  GOTO   037
....................      {
....................           output_high(PIN_B2);//PRENDO LUZ VERDE
001E:  BSF    03.5
001F:  BCF    06.2
0020:  BCF    03.5
0021:  BSF    06.2
....................           delay_ms(50); //5 SEGUNDOS
0022:  MOVLW  32
0023:  MOVWF  23
0024:  CALL   004
....................           output_low(PIN_B2);//APAGO LUZ VERDE
0025:  BSF    03.5
0026:  BCF    06.2
0027:  BCF    03.5
0028:  BCF    06.2
....................          if(input(PIN_C0)==1)//SI PRESIONO EL BOTON
0029:  BSF    20.0
002A:  MOVF   20,W
002B:  BSF    03.5
002C:  MOVWF  07
002D:  BCF    03.5
002E:  BTFSS  07.0
002F:  GOTO   035
....................          {
....................            output_low(PIN_B2);//APAGO LUZ VERDE
0030:  BSF    03.5
0031:  BCF    06.2
0032:  BCF    03.5
0033:  BCF    06.2
....................            break;//ROMPO EL CICLO
0034:  GOTO   037
....................          }
0035:  INCF   21,F
0036:  GOTO   01A
....................      }
0037:  BCF    0A.3
0038:  BCF    0A.4
0039:  GOTO   091 (RETURN)
.................... }
.................... 
.................... void yellow()
003A:  CLRF   21
.................... {//LUZ AMARILLA
....................  int y=0;
.................... 
....................   for (y=0; y < 4 ; y++)
003B:  CLRF   21
003C:  MOVF   21,W
003D:  SUBLW  03
003E:  BTFSS  03.0
003F:  GOTO   058
....................   {//REPITO 4 VECES POR 3 SEGUNDOS
....................     output_high(PIN_B1);//PRENDO LUZ AMARILLA
0040:  BSF    03.5
0041:  BCF    06.1
0042:  BCF    03.5
0043:  BSF    06.1
....................     delay_ms(375);//DELAY
0044:  MOVLW  03
0045:  MOVWF  22
0046:  MOVLW  7D
0047:  MOVWF  23
0048:  CALL   004
0049:  DECFSZ 22,F
004A:  GOTO   046
....................     output_low(PIN_B1);//APAGO LUZ AMARILLA
004B:  BSF    03.5
004C:  BCF    06.1
004D:  BCF    03.5
004E:  BCF    06.1
....................     delay_ms(375);//DELAY
004F:  MOVLW  03
0050:  MOVWF  22
0051:  MOVLW  7D
0052:  MOVWF  23
0053:  CALL   004
0054:  DECFSZ 22,F
0055:  GOTO   051
0056:  INCF   21,F
0057:  GOTO   03C
....................   } 
0058:  BCF    0A.3
0059:  BCF    0A.4
005A:  GOTO   092 (RETURN)
.................... }
.................... 
.................... void red()
.................... { //LUZ ROJA
....................      for(int i=0; i<=100; i++)
005B:  CLRF   21
005C:  MOVF   21,W
005D:  SUBLW  64
005E:  BTFSS  03.0
005F:  GOTO   074
....................      {
....................          output_high(PIN_B0);//PRENDO LUZ ROJA
0060:  BSF    03.5
0061:  BCF    06.0
0062:  BCF    03.5
0063:  BSF    06.0
....................          delay_ms(80);//8 SEGUNDOS
0064:  MOVLW  50
0065:  MOVWF  23
0066:  CALL   004
....................          output_low(PIN_B0);//APAGO LUZ ROJA
0067:  BSF    03.5
0068:  BCF    06.0
0069:  BCF    03.5
006A:  BCF    06.0
....................           
....................          if(input(PIN_C0)==1)
006B:  BSF    20.0
006C:  MOVF   20,W
006D:  BSF    03.5
006E:  MOVWF  07
006F:  BCF    03.5
0070:  BTFSC  07.0
....................          {//SI PRESIONO EL BOTON
....................             i=0;//RESETEO CONTADOR Y REINICIA EL CICLO DE 8 SEGUNDOS
0071:  CLRF   21
....................          }
0072:  INCF   21,F
0073:  GOTO   05C
....................       }
0074:  BCF    0A.3
0075:  BCF    0A.4
0076:  GOTO   093 (RETURN)
.................... }
.................... 
.................... void main(){
0077:  MOVF   03,W
0078:  ANDLW  1F
0079:  MOVWF  03
007A:  MOVLW  FF
007B:  MOVWF  20
007C:  BSF    03.5
007D:  BSF    1F.0
007E:  BSF    1F.1
007F:  BSF    1F.2
0080:  BCF    1F.3
0081:  MOVLW  07
0082:  MOVWF  1C
0083:  BCF    03.7
....................     port_b_pullups (TRUE);
0084:  BCF    01.7
....................     output_low(PIN_B0);//APAGO LUZ ROJA
0085:  BCF    06.0
0086:  BCF    03.5
0087:  BCF    06.0
....................     output_low(PIN_B1);//APAGO LUZ AMARILLA
0088:  BSF    03.5
0089:  BCF    06.1
008A:  BCF    03.5
008B:  BCF    06.1
....................     output_low(PIN_B2);//APAGO LUZ VERDE
008C:  BSF    03.5
008D:  BCF    06.2
008E:  BCF    03.5
008F:  BCF    06.2
....................     
....................     while (1)//CICLO INFINITO
....................     {
....................         green();
0090:  GOTO   019
....................         yellow();
0091:  GOTO   03A
....................         red();
0092:  GOTO   05B
0093:  GOTO   090
....................     }
.................... }
0094:  SLEEP

Configuration Fuses:
   Word  1: 3F71   XT NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
