//-. LDC y Teclado .-

#include <16F877a.h>
#device ADC = 10
#use delay(crystal = 20000000)
#FUSES NOWDT, NOBROWNOUT, NOLVP, HS

#define LCD_ENABLE_PIN  PIN_A3                                    ////
#define LCD_RS_PIN      PIN_A5                                    ////
#define LCD_RW_PIN      PIN_A4                                    ////
#define LCD_DATA4       PIN_D4                                    ////
#define LCD_DATA5       PIN_D5                                    ////
#define LCD_DATA6       PIN_D6                                    ////
#define LCD_DATA7       PIN_D7 
#include <lcd.c>
#include <kbd4x4_b.c>
#include <getNum16.c>

#use STANDARD_IO(C)
#use STANDARD_IO(B)

#define LED_1 PIN_C0
#define LED_2 PIN_C1
#define LED_3 PIN_C2
#define boton_paro PIN_C3

float numeroMotor; //Defino variable a usar
int1 delay_paro(int16 segundos); // Declaramos función pero no la definimos

void paro(){ //Función del paro
   output_low(LED_1);
   output_low(LED_2);
   output_low(LED_3);
}

void motor1(){ //Funcion del primer motor
      output_high(LED_1);
      if(delay_paro(numeroMotor) == 1)break;
      output_low(LED_1);
}

void motor2(){ //Función del segundo motor
   for(int8 i = 0; i < 4; i++){
      if(i % 4 == 0 || i % 4 == 2){
         output_high(LED_2);
         if(delay_paro(numeroMotor * 0.25) == 1)break;
      }
      else{
         output_low(LED_2);
         if(delay_paro(numeroMotor * 0.25) == 1)break;
      }
   }
}

void motor3(){ //Función del tercer motor
   for(int8 i = 0; i < ((numeroMotor+1)/2); i++){
      output_high(LED_3);
      if(delay_paro(1) == 1)break;
      output_low(LED_3);
      if(delay_paro(1) == 1)break;
   }
}

void paro_emergencia(){
   paro(); // Detener motores
   printf(lcd_putc,"\fPARO DE EMERGEN");
   while(input(boton_paro) == 1){}
   printf(lcd_putc,"\fPRESS ANY KEY");
   char tecla = read_key();
}

int1 delay_paro(int16 segundos){
   for(int16 i = 0; i < segundos * 80; i++){
      delay_ms(10);
      if(input(boton_paro)){
         paro_emergencia();
         return 1;
      }
  }
   return 0;
}

void main(){
   port_b_pullups(TRUE);
   lcd_init(); //Inicializar lcd
   kbd_init(); //Inicializar teclado 4x4
   paro();
   input(boton_paro);
   int16 usarMotor;
   output_low(LED_1);//Inicia apagado led 1
   output_low(LED_2);//Inicia apagado led 2
   output_low(LED_3);//Inicia apagado led 3
   while(TRUE){
      printf(lcd_putc,"\fMOTOR A USAR \n(1-2-3): ");
      usarMotor = get_num_lcd(10,2);
      printf(lcd_putc,"\fMotor: %5lu", usarMotor);
         if(1 <= usarMotor && usarMotor <= 3){
            printf(lcd_putc,"\fSEG. DEL MOTOR \nENCENDIDO: ");
            numeroMotor = get_num_lcd(12,2);
            printf(lcd_putc,"\fMotor: %5lu", usarMotor);
               if(0 <= numeroMotor && numeroMotor <= 120){
                  switch (usarMotor){
                     case 1:
                        motor1();
                        break;
                     case 2:
                        motor2();
                        break;
                     case 3:
                        motor3();
                        break;
                  }
               }
               else if(0 > numeroMotor || numeroMotor > 120){
                  printf(lcd_putc,"\f** ERROR ** \nNumero no valido");
                  delay_paro(2);
               }
         }
         else if(1 > usarMotor || usarMotor > 3){
            printf(lcd_putc,"\f** ERROR ** \nNumero no valido");
         delay_paro(2);
         }
   }
}
