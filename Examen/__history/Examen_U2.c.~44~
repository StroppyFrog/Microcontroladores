//-. Motor DC .-

//-. Motor DC .-

#include <16F877a.h>
#device ADC = 10
#use delay(crystal = 20000000)
#FUSES NOWDT, NOBROWNOUT, NOLVP, HS

#include <lcd_c.c>
#include <kbd4x4_d.c>
#include <getNum16.c>

#use STANDARD_IO(C)
#use STANDARD_IO(B)
#use STANDARD_IO(D)

#define M1 PIN_B0
#define M2 PIN_B1
#define boton_paro PIN_E2

int1 delay_paro(int16 segundos); // Declaramos función pero no la definimos
int16 Rutina;

void girarHorario(){
   output_high(M1);
   output_low(M2);
}

void girarAntihorario(){
   output_high(M2);
   output_low(M1);
}

void paro(){
   output_low(M1);
   output_low(M2);
}

void rutina_105(){
   printf(lcd_putc,"\fRutina: %5Lu", Rutina);
   int8 i = 0;
   while(i < 3){
      girarHorario();
      if(delay_paro(5) == 1)break;
      paro();
      if(delay_paro(1) == 1)break;
      girarAntihorario();
      if(delay_paro(5) == 1)break;
      paro();
      if(delay_paro(1) == 1)break;
      i++;
   }
}

void rutina_210(){
   printf(lcd_putc,"\fRutina: %5Lu", Rutina);
   int8 i = 0;
   while(i < 4){
      girarHorario();
      if(delay_paro(3) == 1)break;
      paro();
      if(delay_paro(1) == 1)break;
      i++;
   }
}

void rutina_315(){
   int8 i = 0;
   printf(lcd_putc,"\fSeg. del motor \nencendido: ");
   int8 Ciclos = get_num_lcd(12,2);
   printf(lcd_putc,"\fRutina: %5Lu", Rutina);
   if(1 <= Ciclos && Ciclos <= 120){
      while(i<3){
         girarHorario();
         if(delay_paro(Ciclos) == 1)break;
         paro();
         if(delay_paro(1) == 1)break;
         girarAntihorario();
         if(delay_paro(Ciclos) == 1)break;
         paro();
         if(delay_paro(1) == 1)break;
         i++;
      }
   }
   else if(1 >= Ciclos && Ciclos >= 120){
      printf(lcd_putc,"\f**ERROR** \nNumero no valido");
      delay_paro(2);
   }
}

void rutina_420(){
   int8 i = 0;
   printf(lcd_putc,"\fSeg. del motor \nencendido: ");
   int8 Ciclos = get_num_lcd(12,2);
   if(1 <= Ciclos && Ciclos <= 120){
      printf(lcd_putc,"\fNumero de \niteraciones: ");
      int8 Iteraciones = get_num_lcd(14,2);
      printf(lcd_putc,"\fRutina: %5Lu", Rutina);
      if(1 <= Iteraciones && Iteraciones <= 50){
         while(i < Iteraciones){
            girarHorario();
            if(delay_paro(Ciclos) == 1)break;
            paro();
            if(delay_paro(1) == 1)break;
            girarAntihorario();
            if(delay_paro(Ciclos) == 1)break;
            paro();
            if(delay_paro(1) == 1)break;
            i++;
         }
      }
      else if(1 >= Iteraciones && Iteraciones >= 50){
         printf(lcd_putc,"\f**ERROR** \nNumero no valido");
         delay_paro(3);
      }
   }
   else if(1 >= Ciclos && Ciclos >= 120){
      printf(lcd_putc,"\f**ERROR** \nNumero no valido");
      delay_paro(3);
      
   }
}

void paro_emergencia(){
   paro(); // Detener motores
   printf(lcd_putc,"\fPARO DE EMERGEN");
   while(input(boton_paro) == 1){}
   printf(lcd_putc,"\fPRESS ANY KEY");
   char tecla = read_key();
}

int1 delay_paro(int16 segundos){
   for(int16 i = 0; i < segundos * 100; i++){
      delay_ms(10);
      if(input(boton_paro)){
         paro_emergencia();
         return 1;
      }
  }
   return 0;
}

void main(){
   port_b_pullups(TRUE);
   lcd_init();
   kbd_init();
   paro();
   input(boton_paro);
   while (TRUE){
      printf(lcd_putc,"\fSelecciona la \nrutina: ");
      Rutina = get_num_lcd(9,2);
      switch (Rutina){
         case 105:
            rutina_105();
            break;
         case 210:
            rutina_210();
            break;
         case 315:
            rutina_315();
            break;
         case 420:
            rutina_420();
            break;
      }
      if(Rutina !=105 && Rutina !=210 && Rutina !=315 && Rutina !=420){
         printf(lcd_putc,"\f**ERROR** \nNumero no valido");
         delay_paro(2);
      }
   }
}
